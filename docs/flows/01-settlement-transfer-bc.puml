@startuml

title Settlement Transfer in Transfers BC - Refer to Reference Architecture: [https://miro.com/app/board/o9J_lJyA1TA=/]

participant "Transfer-BC" as ext_transfers_bc
note over ext_transfers_bc
    //TransferCommittedFulfilled//
    gRPC client for settlements are invoked.
end note

box Settlements BC #F9FFF9
	participant "Settlements SVC" as sbc_grpc #D5E8D4
    note over sbc_grpc
        Exposed gRPC interface for
        Settlement.
    end note
	participant "Settlements BC\nApp Logic" as sbc_app_logic #EDC54D
	database "Settlements-Database" as sbc_db #DAE8FC
end box

box Accounts and Balances BC #FFFFF9
    participant "A&B SVC" as abbc_grpc #D5E8D4
    database "A&B-Ledger" as abbc_tigerbeetle #DAE8FC
    note over abbc_grpc
        Exposed gRPC interface for
        Accounts & Balances.
    end note
    note over abbc_tigerbeetle
        TigerBeetle may be turned off/on.
    end note
end box

group 1. Create Settlement Transfer - Transfers BC
autonumber
    ext_transfers_bc <--> ext_transfers_bc : Transfer fulfil occurred
    ext_transfers_bc <--> ext_transfers_bc : Obtain settlement model\nvia //settlement-model-lib//
    ext_transfers_bc -> sbc_grpc : At time of fulfil:\n//createSettlementTransfer// \n**(Settlement Transfer data)**
    sbc_grpc --> sbc_app_logic : Invoke the App layer
end

group 2. Settlement - App Logic
autonumber
    sbc_app_logic <--> sbc_app_logic: Settlement Transfer event triggered
    sbc_app_logic --> sbc_app_logic : Validate **settlement transfer data payload**
    sbc_app_logic <--> sbc_db : Fetch and cache settlement configuration\n**Platform Config BC**
    sbc_app_logic <--> sbc_db : Obtain current open settlement batch based on \n**settlement transfer data payload**\n//New OPEN Batch will be created if no OPEN batch is available//
    sbc_app_logic <-> abbc_grpc : Obtain Debit/Credit **Settlement Accounts** based on participant account info\n//(The settlement accounts are derived and linked from the participant accounts)//
    abbc_grpc <--> abbc_tigerbeetle : Create account \nif 'not exists'
    abbc_grpc -> sbc_app_logic : Return **Account** creation info
    sbc_app_logic -> abbc_grpc: Create Settlement Transfer
    abbc_grpc <-> abbc_tigerbeetle: Debit Payer, Credit Payee
    abbc_grpc -> sbc_app_logic : Return **Transfer** creation info
    sbc_app_logic <--> sbc_app_logic: Prepare response data
    sbc_app_logic --> sbc_grpc: Return **Transfer/Account** info
    sbc_grpc -> ext_transfers_bc: Return **Transfer/Account** info
end

@enduml
